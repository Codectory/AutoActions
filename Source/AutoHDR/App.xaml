<Application x:Class="AutoHDR.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AutoHDR"
             xmlns:views="clr-namespace:AutoHDR.Views"
             xmlns:uwp="clr-namespace:AutoHDR.UWP"
             xmlns:prflActns="clr-namespace:AutoHDR.Profiles.Actions"
             xmlns:info="clr-namespace:AutoHDR.Info"
             xmlns:thm="clr-namespace:AutoHDR.Theming"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:corewpf="clr-namespace:CodectoryCore.UI.Wpf;assembly=CodectoryCore.UI.Wpf"
             StartupUri="Views\AutoHDRMainView.xaml">

    <Application.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Controls\AppResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <system:String x:Key="DonateLink">https://paypal.me/HeikoH89</system:String>
        <system:String x:Key="GitHubRepoLink">https://github.com/Codectory/AutoHDR</system:String>


            <Style x:Key="DefaultTabHeader" TargetType="TabItem">
                <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid>
                                <Border x:Name="HeaderBorder" Background="Transparent" Height="Auto" Width="Auto" BorderBrush="{TemplateBinding Background}"  CornerRadius="3 3 0 0">
                                </Border>
                                <TextBlock Style="{StaticResource DefaultTextBlock}" x:Name="HeaderContent" FontSize="{TemplateBinding  FontSize}" FontWeight="{TemplateBinding FontWeight}" Background="Transparent" Margin="5" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Header}" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" >
                                    <Setter TargetName="HeaderContent"  Property="Foreground" Value="{StaticResource ButtonForegroundBrush}"/>
                                    <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource AccentBrush}"/>
                                    <Setter TargetName="HeaderContent" Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
                                    <Setter TargetName="HeaderContent" Property="FontWeight" Value="DemiBold"/>

                                </DataTrigger>

                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" >
                                    <Setter  TargetName="HeaderContent" Property="Foreground" Value="Black"/>
                                    <Setter TargetName="HeaderContent" Property="FontSize" Value="{StaticResource DefaultFontSize}"/>

                                </DataTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>


            </Style>
            <Style TargetType="TabItem" BasedOn="{StaticResource DefaultTabHeader}"/>
            <Style x:Key="GridHeaderRight" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Border BorderBrush="White" BorderThickness="1,0,1,0">
                        <TextBlock Text="{TemplateBinding Content}" Padding="10,5,10,5" Width="{TemplateBinding Width}" TextAlignment="Left" Background="{StaticResource AccentBrush}" Style="{x:Null}"/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="{StaticResource AccentBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>

        </Style>


        <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource GridHeaderRight}"/>


        <Style x:Key="DefaultListViewItem"  TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="ListBoxItemRoot" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1,0" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="2" 
                            Uid="Border_57">
                            <GridViewRowPresenter Columns="{TemplateBinding GridView.ColumnCollection}" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              Uid="GridViewRowPresenter_1" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"></VisualState>
                                    <VisualState x:Name="Disabled"></VisualState>
                                    <VisualState x:Name="MouseOver"></VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Selected"></VisualState>
                                    <VisualState x:Name="Unselected"></VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{StaticResource MouseOverBrush}" />
                    <Setter Property="Foreground" Value="White" />

                </Trigger>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                    <Setter Property="Foreground" Value="White" />

                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource DefaultListViewItem}"/>



        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Vertical">
                                <Setter TargetName="Rectangle1" Property="Width" Value="6" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="Auto" />
                            </Trigger>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="6" />

                            </Trigger>
            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBars-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="LightGray" />
            <Setter Property="Background" Value="{StaticResource ScrollBrush}" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="19" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource MouseOverScrollBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DragScrollBrush }" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="10" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="Width" Value="10" />
                                <Setter Property="Height" Value="Auto" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Vertical" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Viewbox HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <Grid>
                                <Border x:Name="Border" Style="{StaticResource DefaultBorder}"
                            Width="40" Height="20">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"></VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)">
                                                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderColor}" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOver"></VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Border>
                            <Ellipse x:Name="Ellipse" Fill="#FFFFFFFF" Stretch="Uniform"
                                 Margin="3 2 3 2"
                                 Stroke="Gray" StrokeThickness="0.2"
                                 HorizontalAlignment="Stretch">
                                <Ellipse.Effect>
                                    <DropShadowEffect BlurRadius="{StaticResource DefaultRadius}" ShadowDepth="1" Opacity="0." Direction="260" />
                                </Ellipse.Effect>
                            </Ellipse>
                            </Grid>
                        </Viewbox>

                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource ActiveColor}"
                                                    Duration="0:0:0.1" />
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="20 1 2 1"
                                                        Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="White"
                                                    Duration="0:0:0.1" />
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="2 1 2 1"
                                                        Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>

                    <Trigger Property="IsEnabled"  Value="False">
                        <Setter Property="Border.Background" Value="{StaticResource DisabledAccentBrush}"/>
                    </Trigger>
            </Style.Triggers>
        </Style>














        <corewpf:EnumLocaleConverter x:Key="EnumLocaleConverter"/>
        <corewpf:DialogService x:Key="DialogService" />
        <corewpf:DialogService x:Key="ProfileDialogService" />
        <corewpf:BitmapToBitmapImageConverter x:Key="BitmapToBitmapImageConverter"/>
        <corewpf:InvertBooleanConverter x:Key="InvertBooleanConverter"/>
        <corewpf:MainWindowBase x:Key="MainWindowBase"/>
        <corewpf:IsNotNullConverter x:Key="IsNotNullConverter"/>
        <corewpf:SizeTextConverter x:Key="SizeTextConverter"/>
        <corewpf:IsNotZeroConverter x:Key="IsNotZeroConverter"/>
        <corewpf:StringFormatConcatenator x:Key="StringFormatConcatenator"/>
        <corewpf:VisibilityBooleanConverter x:Key="VisibilityBooleanConverter"/>
        <corewpf:ConverterChain x:Key="InvertVisibilityBooleanConverter">
            <corewpf:InvertBooleanConverter />
            <corewpf:VisibilityBooleanConverter />
        </corewpf:ConverterChain>
        <corewpf:ConverterChain x:Key="NotZeroVisibilityBooleanConverter">
            <corewpf:IsNotZeroConverter />
            <corewpf:VisibilityBooleanConverter />
        </corewpf:ConverterChain>

        <corewpf:ConverterChain x:Key="NotNullVisibilityConverter">
            <corewpf:IsNotNullConverter />
            <corewpf:VisibilityBooleanConverter />
        </corewpf:ConverterChain>
        <corewpf:TupleConverter x:Key="TupleConverter"/>
        <DataTemplate DataType="{x:Type local:ApplicationAdder}">
            <views:ApplicationAdderView></views:ApplicationAdderView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type prflActns:ProfileActionAdder}">
            <views:ProfileActionAdderView></views:ProfileActionAdderView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uwp:UWPApplicationDialog}">
            <views:UWPApplicationDialogView></views:UWPApplicationDialogView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type info:AutoHDRInfo}">
            <views:AutoHDRInfoView></views:AutoHDRInfoView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type info:AutoHDRLicense}">
            <views:AutoHDRLicenseView></views:AutoHDRLicenseView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type info:LogsStorage}">
            <views:AutoHDRLogsView></views:AutoHDRLogsView>
        </DataTemplate>
            <DataTemplate x:Key="ProfileItemTemplate" DataType="Profile">
                <TextBlock Style="{StaticResource DefaultTextBlock}" Text="{Binding Name }"/>
            </DataTemplate>
        </ResourceDictionary>

    </Application.Resources>

</Application>
