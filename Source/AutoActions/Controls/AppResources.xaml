<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
  <!--This is an auto-generated file. Do not change by yourself since it's overridden with each build-->
  <!---->
  <!---->
  <!--Merged from file 1_Colors.xaml-->
  <Color x:Key="ActiveColor">#2ac987</Color>
  <Color x:Key="AccentColor">#ff6666</Color>
  <Color x:Key="ControlMouseOverColor">#fa8e8e</Color>
  <Color x:Key="ControlPressedColor">#e36b6b</Color>
  <Color x:Key="WindowColor">White</Color>
  <Color x:Key="SelectedBackgroundColor">#fca9a9</Color>
  <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>
  <Color x:Key="ControlLightColor">White</Color>
  <Color x:Key="ControlMediumColor">#FFCCCCCC</Color>
  <Color x:Key="IconBackgroundColor">#d4d4d4</Color>
  <Color x:Key="GlyphColor">#FF444444</Color>
  <Color x:Key="DisabledForegroundColor">#cfcfcf</Color>
  <Color x:Key="DisabledControlDarkColor">#8A8A8A</Color>
  <Color x:Key="DisabledBorderColor">#adadad</Color>
  <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource WindowColor}" />
  <SolidColorBrush x:Key="ButtonForegroundBrush" Color="{StaticResource WindowColor}" />
  <SolidColorBrush x:Key="ActiveBrush" Color="{StaticResource ActiveColor}" />
  <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}" />
  <SolidColorBrush x:Key="HighlightedBrush" Color="{StaticResource SelectedBackgroundColor}" />
  <SolidColorBrush x:Key="MouseOverBrush" Color="{StaticResource ControlMouseOverColor}" />
  <SolidColorBrush x:Key="ControlLightBrush" Color="{StaticResource ControlLightColor}" />
  <SolidColorBrush x:Key="GlyphBrush" Color="{StaticResource GlyphColor}" />
  <SolidColorBrush x:Key="IconBackgroundBrush" Color="{StaticResource IconBackgroundColor}" />
  <SolidColorBrush x:Key="InactiveAccentBrush">#ad7b7b</SolidColorBrush>
  <SolidColorBrush x:Key="DragScrollBrush">#757575</SolidColorBrush>
  <SolidColorBrush x:Key="ScrollBrush">#969696</SolidColorBrush>
  <SolidColorBrush x:Key="MouseOverScrollBrush">#a1a1a1</SolidColorBrush>
  <SolidColorBrush x:Key="DisabledAccentBrush" Color="{StaticResource DisabledControlDarkColor}" />
  <SolidColorBrush x:Key="HighlightedInactiveAccentBrush" Color="#95bfdb" />
  <StaticResource x:Key="ButtonBackgroundBrush" ResourceKey="AccentBrush" />
  <!---->
  <!--Merged from file 2_DefaultControls.xaml-->
  <system:Double x:Key="DefaultFontSize">15</system:Double>
  <system:Double x:Key="DefaultRadius">7.5</system:Double>
  <CornerRadius x:Key="DefaultCornerRadius">7.5</CornerRadius>
  <Style x:Key="DefaultBorder" TargetType="Border">
    <Setter Property="CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Height" Value="Auto" />
    <Setter Property="Width" Value="Auto" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Effect">
      <Setter.Value>
        <DropShadowEffect BlurRadius="2.5" ShadowDepth="1" Opacity="0.4" Direction="260" />
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Background" Value="{StaticResource DisabledAccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DisabledAccentBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Grid>
            <Border Name="_Border" Padding="2" SnapsToDevicePixels="true" Margin="5"></Border>
            <ContentPresenter />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="_Border" Property="Background" Value="{StaticResource HighlightedBrush}" />
              <Setter Property="Foreground" Value="Black" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultTextBlock" TargetType="TextBlock">
    <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="Margin" Value="5" />
  </Style>
  <Style x:Key="TitleTextBlock" TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlock}">
    <Setter Property="FontSize" Value="25" />
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="FontWeight" Value="Bold" />
  </Style>
  <Style x:Key="SubTitleTextBlock" TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlock}">
    <Setter Property="FontSize" Value="20" />
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="FontWeight" Value="DemiBold" />
  </Style>
  <Style x:Key="ToggleStatus" TargetType="{x:Type CheckBox}">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="IsEnabled" Value="false" />
    <Setter Property="Height" Value="20" />
    <Setter Property="Width" Value="20" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Ellipse Fill="{TemplateBinding Background}" HorizontalAlignment="Stretch" Stroke="Black" VerticalAlignment="Stretch" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="true">
        <Setter Property="Background" Value="{StaticResource ActiveBrush}"></Setter>
      </Trigger>
      <Trigger Property="IsChecked" Value="false">
        <Setter Property="Background" Value="Transparent"></Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="DefaultUserControl" TargetType="UserControl">
    <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}" />
    <Setter Property="Foreground" Value="Black" />
  </Style>
  <Style TargetType="UserControl" BasedOn="{StaticResource DefaultUserControl}" />
  <Style x:Key="DefaultTextBox" TargetType="TextBox">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBoxBase">
          <Grid>
            <Border Style="{StaticResource DefaultBorder}" Background="{TemplateBinding Background}">
              <Border.Effect>
                <DropShadowEffect BlurRadius="{StaticResource DefaultRadius}" ShadowDepth="1" Opacity="0.25" Direction="260" />
              </Border.Effect>
            </Border>
            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Padding" Value="5,5" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Background" Value="{StaticResource DisabledAccentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="true">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation To="{StaticResource ControlMouseOverColor}" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0.10" AutoReverse="False" RepeatBehavior="1x" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0.10" AutoReverse="False" RepeatBehavior="1x" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="TextBox" BasedOn="{StaticResource DefaultTextBox}" />
  <Style x:Key="DefaultButton" TargetType="Button">
    <Setter Property="Background" Value="{StaticResource AccentBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}" />
    <Setter Property="Height" Value="25" />
    <Setter Property="FontSize" Value="20" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border Height="Auto" Width="Auto" BorderBrush="{TemplateBinding Background}" Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="{StaticResource DefaultCornerRadius}">
            <TextBlock Style="{StaticResource DefaultTextBlock}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Background="Transparent" Margin="8,5" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Padding" Value="5,5" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Background" Value="{StaticResource DisabledAccentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="true">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation To="{StaticResource ControlMouseOverColor}" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0.10" AutoReverse="False" RepeatBehavior="1x" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0.10" AutoReverse="False" RepeatBehavior="1x" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
      <Trigger Property="IsPressed" Value="true">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation To="{StaticResource ControlPressedColor}" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0.10" AutoReverse="False" RepeatBehavior="1x" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0.10" AutoReverse="False" RepeatBehavior="1x" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="Button" BasedOn="{StaticResource DefaultButton}" />
  <Style x:Key="DefaultCheckBox" TargetType="{x:Type CheckBox}">
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="BorderBrush" Value="{StaticResource DisabledAccentBrush}"></Setter>
      </Trigger>
    </Style.Triggers>
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="Height" Value="25" />
    <Setter Property="Width" Value="25" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
              <Grid>
                <Border x:Name="Border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Style="{StaticResource DefaultBorder}" />
                <Path Visibility="Collapsed" Width="10" Height="10" x:Name="CheckMark" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 1 4 L 4 9 M 4 9 L 9 0">
                  <Path.Stroke>
                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                  </Path.Stroke>
                </Path>
              </Grid>
            </BulletDecorator.Bullet>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InderminateMark">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
          </BulletDecorator>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="CheckBox" BasedOn="{StaticResource DefaultCheckBox}" />
  <!---->
  <!--Merged from file 3_CustomComboBox.xaml-->
  <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="20" />
      </Grid.ColumnDefinitions>
      <Border Style="{StaticResource DefaultBorder}" x:Name="Border" Grid.ColumnSpan="2" Background="{StaticResource ControlLightBrush}" />
      <Border Grid.Column="0" CornerRadius="0" Margin="10,1,0,1" Background="{Binding ElementName=Border, Path=Background}" BorderBrush="{Binding ElementName=Border, Path=BorderBrush}" BorderThickness="0,0,1,0" />
      <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource  GlyphBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ToggleButton.IsMouseOver" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{StaticResource MouseOverBrush}" />
      </Trigger>
      <Trigger Property="ToggleButton.IsChecked" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledAccentBrush}" />
        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledAccentBrush}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource  GlyphBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
    <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
  </ControlTemplate>
  <Style x:Key="StyledComboBox" TargetType="{x:Type ComboBox}">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="MinWidth" Value="120" />
    <Setter Property="MinHeight" Value="20" />
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="FontWeight" Value="DemiBold" />
    <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid>
            <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="5,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left" />
            <TextBox x:Name="PART_EditableTextBox" Style="{StaticResource DefaultTextBox}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,5,23,3" Focusable="True" Background="{StaticResource ControlLightBrush}" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />
            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
              <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                <Border x:Name="DropDownBorder" Style="{StaticResource DefaultBorder}" Background="{StaticResource ControlLightBrush}" />
                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                </ScrollViewer>
              </Grid>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
              <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource DisabledAccentBrush}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
              <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
              <Setter Property="IsTabStop" Value="false" />
              <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
              <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers></Style.Triggers>
  </Style>
  <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Grid>
            <Border Name="Border" Style="{StaticResource DefaultBorder}" BorderThickness="0" SnapsToDevicePixels="true"></Border>
            <ContentPresenter />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource MouseOverBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource DisabledControlDarkColor}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ComboBox" BasedOn="{StaticResource StyledComboBox}" />
  <!--This XAML merge infrastructure was provided by http://michaelscodingspot.com/-->
</ResourceDictionary>