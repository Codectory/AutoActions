<Application x:Class="HDRProfile.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:HDRProfile"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:corewpf="clr-namespace:CodectoryCore.UI.Wpf;assembly=CodectoryCore.UI.Wpf"
             Exit="Application_Exit"
             StartupUri="HDRProfileHandlerView.xaml">
    
    <Application.Resources>

        <system:String x:Key="DonateLink">https://paypal.me/pools/c/8vksshrMln</system:String>
        <system:String x:Key="InfoLink">https://github.com/Codectory/HDR-Profile</system:String>
        <Color x:Key="AccentColor">#5d9ac7</Color>
        <Color x:Key="HighlightedColor">#6fb3e3</Color>
        <Color x:Key="ButtonClickedColor">#396585</Color>
        <SolidColorBrush x:Key="ButtonForegroundBrush">White</SolidColorBrush>


        <SolidColorBrush x:Key="AccentBrush"  Color="{StaticResource AccentColor}"/>
        <SolidColorBrush x:Key="InactiveAccentBrush">#7292a8</SolidColorBrush>
        <SolidColorBrush x:Key="DisabledAccentBrush">#949ea6</SolidColorBrush>
        <SolidColorBrush x:Key="HighlightedInactiveAccentBrush" Color="#95bfdb"/>
        <StaticResource x:Key="ButtonBackgroundBrush"  ResourceKey="AccentBrush"/>
        <CornerRadius x:Key="CornerRadius">3</CornerRadius>
        
        <Style TargetType="TextBlock" >
            <Setter Property="Foreground" Value="Black"/>
        </Style>

        <Style x:Key="RoundedBorder" TargetType="Border">
            <Setter Property="CornerRadius" Value="{StaticResource CornerRadius}"/>
        </Style>

        <Style x:Key="HDRCircle" TargetType="Ellipse">
            <Setter Property="HorizontalAlignment"  Value="Center" />
            <Setter Property="VerticalAlignment"  Value="Center" />
                <Style.Triggers>
                        <Trigger Property="Tag"  Value="True">
                            <Setter Property="Fill" Value="#5d9ac7"/>
                        </Trigger>
                <Trigger Property="Tag"  Value="False">
                            <Setter Property="Fill" Value="Transparent"/>
                        </Trigger>
                </Style.Triggers>
        </Style>


        <Style x:Key="DefaultButton" TargetType="Button" >
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                          <Border  Height="Auto" Width="Auto" BorderBrush="{TemplateBinding Background}" Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="{StaticResource CornerRadius}">
                            <TextBlock  FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Background="Transparent" Margin="5" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                          </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="5,5"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" Value="{StaticResource DisabledAccentBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="{StaticResource HighlightedColor}"
                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.10" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                            Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.10" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>

                </Trigger>

                <Trigger Property="IsPressed" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="{StaticResource ButtonClickedColor}"
                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.10" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                            Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.10" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>

                </Trigger>

     
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource DefaultButton}"/>



        <Style x:Key="DefaultTabHeader" TargetType="TabItem">
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border x:Name="HeaderBorder" Background="Transparent" Height="Auto" Width="Auto" BorderBrush="{TemplateBinding Background}"  CornerRadius="3 3 0 0">
                            <TextBlock x:Name="HeaderContent" FontSize="{TemplateBinding  FontSize}" FontWeight="{TemplateBinding FontWeight}" Background="Transparent" Margin="5" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Header}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" >
                                <Setter TargetName="HeaderContent"  Property="Foreground" Value="{StaticResource ButtonForegroundBrush}"/>
                                <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource AccentBrush}"/>
                                <Setter TargetName="HeaderContent" Property="FontSize" Value="18"/>

                            </DataTrigger>

                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" >
                                <Setter  TargetName="HeaderContent" Property="Foreground" Value="Black"/>
                            </DataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


        </Style>

        <Style TargetType="TabItem" BasedOn="{StaticResource DefaultTabHeader}"/>

        


        <local:EnumLocaleConverter x:Key="EnumLocaleConverter"/>
        <corewpf:DialogService x:Key="DialogService" />
        <corewpf:BitmapToBitmapImageConverter x:Key="BitmapToBitmapImageConverter"/>
        <corewpf:InvertBooleanConverter x:Key="InvertBooleanConverter"/>
        <corewpf:MainWindowBase x:Key="MainWindowBase"/>
        <corewpf:IsNotNullConverter x:Key="IsNotNullConverter"/>
        <corewpf:IsNotZeroConverter x:Key="IsNotZeroConverter"/>
        <corewpf:StringFormatConcatenator x:Key="StringFormatConcatenator"/>
        <corewpf:VisibilityBooleanConverter x:Key="VisibilityBooleanConverter"/>
        <corewpf:ConverterChain x:Key="InvertVisibilityBooleanConverter">
            <corewpf:InvertBooleanConverter />
            <corewpf:VisibilityBooleanConverter />
        </corewpf:ConverterChain>
        <corewpf:ConverterChain x:Key="NotZeroVisibilityBooleanConverter">
            <corewpf:IsNotZeroConverter />
            <corewpf:VisibilityBooleanConverter />
        </corewpf:ConverterChain>

        <DataTemplate DataType="{x:Type local:ApplicationAdder}">
            <local:ApplicationAdderView></local:ApplicationAdderView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:UWPApplicationDialog}">
            <local:UWPApplicationDialogView></local:UWPApplicationDialogView>
        </DataTemplate>
    </Application.Resources>

</Application>
