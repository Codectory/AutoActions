//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HDRProfile {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Locale_Texts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Locale_Texts() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HDRProfile.Locale_Texts", typeof(Locale_Texts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activate HDR ähnelt.
        /// </summary>
        public static string ActivateHDR {
            get {
                return ResourceManager.GetString("ActivateHDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add application ähnelt.
        /// </summary>
        public static string AddApplication {
            get {
                return ResourceManager.GetString("AddApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HDR Profile is already running. ähnelt.
        /// </summary>
        public static string AlreadyRunning {
            get {
                return ResourceManager.GetString("AlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Application name ähnelt.
        /// </summary>
        public static string ApplicationName {
            get {
                return ResourceManager.GetString("ApplicationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applications ähnelt.
        /// </summary>
        public static string Applications {
            get {
                return ResourceManager.GetString("Applications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto HDR ähnelt.
        /// </summary>
        public static string AutoHDR {
            get {
                return ResourceManager.GetString("AutoHDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable HDR on this monitor, based on the applications ähnelt.
        /// </summary>
        public static string AutoHDRToolTip {
            get {
                return ResourceManager.GetString("AutoHDRToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto-Start ähnelt.
        /// </summary>
        public static string AutoStart {
            get {
                return ResourceManager.GetString("AutoStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Buy me a beer! ähnelt.
        /// </summary>
        public static string BuyBeer {
            get {
                return ResourceManager.GetString("BuyBeer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose application ähnelt.
        /// </summary>
        public static string ChooseApplication {
            get {
                return ResourceManager.GetString("ChooseApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restarts the application on first occurence, as the application may need HDR to be activated before launching it. ähnelt.
        /// </summary>
        public static string CompatibilityModeToolTip {
            get {
                return ResourceManager.GetString("CompatibilityModeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current application ähnelt.
        /// </summary>
        public static string CurrentApplication {
            get {
                return ResourceManager.GetString("CurrentApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deactivate HDR ähnelt.
        /// </summary>
        public static string DeactivateHDR {
            get {
                return ResourceManager.GetString("DeactivateHDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Device ID ähnelt.
        /// </summary>
        public static string DeviceID {
            get {
                return ResourceManager.GetString("DeviceID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display name ähnelt.
        /// </summary>
        public static string DisplayName {
            get {
                return ResourceManager.GetString("DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to restart application. ähnelt.
        /// </summary>
        public static string ExceptionRestartProcess {
            get {
                return ResourceManager.GetString("ExceptionRestartProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File path ähnelt.
        /// </summary>
        public static string FilePath {
            get {
                return ResourceManager.GetString("FilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Auto HDR for all monitors ähnelt.
        /// </summary>
        public static string GlobalAutoHDR {
            get {
                return ResourceManager.GetString("GlobalAutoHDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HDR ähnelt.
        /// </summary>
        public static string HDR {
            get {
                return ResourceManager.GetString("HDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HDR Mode ähnelt.
        /// </summary>
        public static string HDRMode {
            get {
                return ResourceManager.GetString("HDRMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HDR Profile ähnelt.
        /// </summary>
        public static string HDRProfile {
            get {
                return ResourceManager.GetString("HDRProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Icon ähnelt.
        /// </summary>
        public static string Icon {
            get {
                return ResourceManager.GetString("Icon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Info ähnelt.
        /// </summary>
        public static string Info {
            get {
                return ResourceManager.GetString("Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Logging ähnelt.
        /// </summary>
        public static string Logging {
            get {
                return ResourceManager.GetString("Logging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        public static System.Drawing.Icon Logo {
            get {
                object obj = ResourceManager.GetObject("Logo", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close to tray ähnelt.
        /// </summary>
        public static string MinimizeToTray {
            get {
                return ResourceManager.GetString("MinimizeToTray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Monitors ähnelt.
        /// </summary>
        public static string Monitors {
            get {
                return ResourceManager.GetString("Monitors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No application is running ähnelt.
        /// </summary>
        public static string NoApplication {
            get {
                return ResourceManager.GetString("NoApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open ähnelt.
        /// </summary>
        public static string Open {
            get {
                return ResourceManager.GetString("Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove application ähnelt.
        /// </summary>
        public static string RemoveApplication {
            get {
                return ResourceManager.GetString("RemoveApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compatibility mode ähnelt.
        /// </summary>
        public static string RestartProccessOnFirstOccurence {
            get {
                return ResourceManager.GetString("RestartProccessOnFirstOccurence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit application ähnelt.
        /// </summary>
        public static string Shutdown {
            get {
                return ResourceManager.GetString("Shutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start in HDR-Mode ähnelt.
        /// </summary>
        public static string StartInHDR {
            get {
                return ResourceManager.GetString("StartInHDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start to tray ähnelt.
        /// </summary>
        public static string StartToTray {
            get {
                return ResourceManager.GetString("StartToTray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status ähnelt.
        /// </summary>
        public static string Status {
            get {
                return ResourceManager.GetString("Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Volume sync devices ähnelt.
        /// </summary>
        public static string VolumeSyncDevices {
            get {
                return ResourceManager.GetString("VolumeSyncDevices", resourceCulture);
            }
        }
    }
}
